
[ ] add some extra space after having paused

[ ] build a system for updating gui as well as the icon, in a reliable and consistent way
[ ] standardize how gui updates are made
[ ] standardize a naming system for handler methods (maybe ending with _m if they update the model?)

[ ] Adding a button to the rest dialog for starting breathing after a break
        self.close_and_breathing_qpb = QtWidgets.QPushButton("Start Breathing")
        hbox.addWidget(self.close_and_breathing_qpb)

[x] ***Alt: Integrating rest into the main window***

[x] removing the numbers for lenght of in and out-breath

[x] Windows: remove console window while running the application
https://stackoverflow.com/questions/25604611/how-to-stop-cmd-prompt-from-showing-when-i-run-my-exe-file
http://pyinstaller.readthedocs.io/en/stable/usage.html?highlight=noconsole

[ ] .spec file should be generic and not contain the paths of a specific computer

[ ] adding a windows icon (.ico)

[ ] adding presets

=========


Low prio:
[ ] indicate which breathing phrase is active in the sys tray. Please note: This means that we
may also need to include another value here, since the user may not have chosen one of the
top three / five
[ ] choosing a different directory for user files (to make it easier to backup)
[ ] setting the log level when starting the application, using a command line argument
[ ] marketing: adding a line in my email signature
[ ] testing
 * add different test setups (no list items for example)
[ ] when breathing starts, everything else is grayed out
[ ] using vbox.addSpacing(x) to separate parts of the interface (maybe this can replace the
horizontal lines?)
[ ] what to display in the system tray menu?
http://doc.qt.io/qt-5/qsystemtrayicon.html#setContextMenu

[ ] prio: don't change the current time until
1. the user presses the "reset timer" button
or
2. the current time has run out

